setwd("/Users/marco/GitHub/iwrw/analysis/2024/")
library(ggplot2)
library(plyr)
library(tidyverse)
library(hrbrthemes)
library(viridis)
library(stringr)
library(plotly)
library(grid)
library(gridExtra)
library(dplyr)
library(ggfortify)
zeiger <- read.csv("./../flora_indicativa/FI_Plant.csv", sep = ";", header = T)
zeiger <- zeiger[, c(2, 19, 22, 24)]
colnames(zeiger) <- c("scientific_name", "F", "R", "N")
# List all files in the data directory
csv_files <- list.files("./biodiversity/data-raw/", pattern = "*.csv", full.names = TRUE)
obs <- map_dfr(csv_files, ~read_csv(.x)) %>%
filter(area != 0) %>%
mutate(scientific_name = paste(genus, " ", species, sep = "")) %>%
mutate(scientific_name = if_else(scientific_name == "Festuca valesiaca aggr.", "Festuca valesiaca", scientific_name)) %>%
left_join(zeiger, by = "scientific_name") %>%
filter(genus != "0" | !is.na(genus))
obs <- map_dfr(csv_files, ~read_csv(.x)) %>%
filter(.[[1]] != 0) %>%
mutate(scientific_name = paste(genus, " ", species, sep = "")) %>%
mutate(scientific_name = if_else(scientific_name == "Festuca valesiaca aggr.", "Festuca valesiaca", scientific_name)) %>%
left_join(zeiger, by = "scientific_name") %>%
filter(genus != "0" | !is.na(genus))
View(obs)
View(obs)
View(zeiger)
fi <- read_csv("/Users/marco/GitHub/iwrw/analysis/FI.csv")
View(fi)
checklist <- read_csv("/Users/marco/GitHub/iwrw/analysis/Checklist_2017_simple_version_20230503.csv")
View(checklist)
View(checklist)
View(fi)
View(checklist)
fi <- read_csv("/Users/marco/GitHub/iwrw/analysis/FI.csv") %>%
inner_join(checklist, by = c("SIN = Nr.SISF"))
fi <- read_csv("/Users/marco/GitHub/iwrw/analysis/FI.csv") %>%
inner_join(checklist, by = c("SIN" = "Nr.SISF"))
checklist <- read_csv("/Users/marco/GitHub/iwrw/analysis/Checklist_2017_simple_version_20230503.csv")
fi <- read_csv("/Users/marco/GitHub/iwrw/analysis/FI.csv") %>%
inner_join(checklist, by = c("SIN" = "Nr.SISF"))
View(checklist)
fi <- read_csv("/Users/marco/GitHub/iwrw/analysis/FI.csv") %>%
inner_join(checklist, by = c("SIN" = "Nr. SISF"))
checklist <- read_csv("/Users/marco/GitHub/iwrw/analysis/Checklist_2017_simple_version_20230503.csv") %>%
mutate_all(as.character())
fi <- read_csv("/Users/marco/GitHub/iwrw/analysis/FI.csv") %>%
inner_join(checklist, by = c("SIN" = "Nr. SISF"))
mutate_all(as.character
checklist <- read_csv("/Users/marco/GitHub/iwrw/analysis/Checklist_2017_simple_version_20230503.csv") %>%
checklist <- read_csv("/Users/marco/GitHub/iwrw/analysis/Checklist_2017_simple_version_20230503.csv") %>%
mutate_all(as.character)
fi <- read_csv("/Users/marco/GitHub/iwrw/analysis/FI.csv") %>%
inner_join(checklist, by = c("SIN" = "Nr. SISF"))
View(fi)
# List all files in the data directory
csv_files <- list.files("./biodiversity/data-raw/", pattern = "*.csv", full.names = TRUE)
# Read in plot description
plots <- read_csv("./../R_files/iwrw-plots.csv")
View(fi)
View(obs)
obs <- map_dfr(csv_files, ~read_csv(.x)) %>%
filter(.[[1]] != 0) %>%
left_join(fi, by = c("TaxonID" = "Taxon ID"))
obs <- map_dfr(csv_files, ~read_csv(.x)) %>%
filter(.[[1]] != 0) %>%
mutate(TaxonID = as.character(TaxonID)) %>%
left_join(fi, by = c("TaxonID" = "Taxon ID"))
checklist <- read_csv("/Users/marco/GitHub/iwrw/analysis/Checklist_2017_simple_version_20230503.csv") %>%
mutate_all(as.character) %>%
rename(TaxonID = "Taxon ID")
fi <- read_csv("/Users/marco/GitHub/iwrw/analysis/FI.csv") %>%
inner_join(checklist, by = c("SIN" = "Nr. SISF")) %>%
distinct(Taxon)
obs <- map_dfr(csv_files, ~read_csv(.x)) %>%
filter(.[[1]] != 0) %>%
left_join(fi, by = c("TaxonID" = "Taxon ID"))
fi <- read_csv("/Users/marco/GitHub/iwrw/analysis/FI.csv") %>%
inner_join(checklist, by = c("SIN" = "Nr. SISF")) %>%
distinct(TaxonID)
obs <- map_dfr(csv_files, ~read_csv(.x)) %>%
filter(.[[1]] != 0) %>%
left_join(fi, by = c("TaxonID" = "Taxon ID"))
obs <- map_dfr(csv_files, ~read_csv(.x)) %>%
filter(.[[1]] != 0) %>%
left_join(fi, by = "TaxonID")
obs <- map_dfr(csv_files, ~read_csv(.x)) %>%
filter(.[[1]] != 0) %>%
mutate(TaxonID = as.character(TaxonID)) %>%
left_join(fi, by = "TaxonID")
View(obs)
View(fi)
fi <- read_csv("/Users/marco/GitHub/iwrw/analysis/FI.csv") %>%
inner_join(checklist, by = c("SIN" = "Nr. SISF")) %>%
distinct(TaxonID, .keep_all = T)
obs <- map_dfr(csv_files, ~read_csv(.x)) %>%
filter(.[[1]] != 0) %>%
mutate(TaxonID = as.character(TaxonID)) %>%
left_join(fi, by = "TaxonID")
View(obs)
colnames(fi)
fi <- read_csv("/Users/marco/GitHub/iwrw/analysis/FI.csv") %>%
inner_join(checklist, by = c("SIN" = "Nr. SISF")) %>%
distinct(TaxonID, .keep_all = T) %>%
select(TaxonID, Bod_F, Bod_R, Bod_N)
obs <- map_dfr(csv_files, ~read_csv(.x)) %>%
filter(.[[1]] != 0) %>%
mutate(TaxonID = as.character(TaxonID)) %>%
left_join(fi, by = "TaxonID")
obs <- map_dfr(csv_files, ~read_csv(.x)) %>%
filter(.[[1]] != 0)
View(obs)
obs <- map_dfr(csv_files, ~read_csv(.x)) %>%
filter(.[[1]] != 0) %>%
select(TaxonID, taxonCH) %>%
mutate(TaxonID = as.character(TaxonID)) %>%
left_join(fi, by = "TaxonID")
View(obs)
View(fi)
fi <- read_csv("/Users/marco/GitHub/iwrw/analysis/FI.csv") %>%
inner_join(checklist, by = c("SIN" = "Nr. SISF")) %>%
distinct(TaxonID, .keep_all = T)
View(fi)
fi <- read_csv("/Users/marco/GitHub/iwrw/analysis/FI.csv") %>%
inner_join(checklist, by = c("SIN" = "Nr. SISF")) %>%
distinct(TaxonID, .keep_all = T) %>%
select(Taxon, TaxonID, Bod_F, Bod_R, Bod_N)
View(fi)
obs <- map_dfr(csv_files, ~read_csv(.x)) %>%
filter(.[[1]] != 0) %>%
select(taxonCH) %>%
mutate(taxonCH = str_extract(taxonCH, "^\\w+ \\w+"))
View(obs)
fi <- read_csv("/Users/marco/GitHub/iwrw/analysis/FI.csv") %>%
inner_join(checklist, by = c("SIN" = "Nr. SISF")) %>%
distinct(TaxonID, .keep_all = T) %>%
select(Taxon, Bod_F, Bod_R, Bod_N)
obs <- map_dfr(csv_files, ~read_csv(.x)) %>%
filter(.[[1]] != 0) %>%
select(taxonCH) %>%
mutate(taxonCH = str_extract(taxonCH, "^\\w+ \\w+")) %>%
left_join(fi, by = c("taxonCH" = "Taxon"))
View(obs)
obs <- map_dfr(csv_files, ~read_csv(.x)) %>%
filter(.[[1]] != 0)
View(obs)
obs <- map_dfr(csv_files, ~read_csv(.x)) %>%
filter(.[[1]] != 0) %>%
select(.[[6, 13]])
obs <- map_dfr(csv_files, ~read_csv(.x)) %>%
filter(.[[1]] != 0) %>%
select(6, 13)
View(obs)
View(obs)
obs <- map_dfr(csv_files, ~read_csv(.x)) %>%
filter(.[[1]] != 0) %>%
select(6, 13) %>%
rename(plotID = "0...13") %>%
mutate(taxonCH = str_extract(taxonCH, "^\\w+ \\w+")) %>%
left_join(fi, by = c("taxonCH" = "Taxon"))
View(obs)
result <- obs %>%
group_by(plot_id) %>%
summarize(
Count = n(),
Avg_N = round(mean(as.numeric(as.character(Bod_N)), na.rm = TRUE), 2),
Avg_F = round(mean(as.numeric(as.character(Bod_F)), na.rm = TRUE), 2),
Avg_R = round(mean(as.numeric(as.character(Bod_R)), na.rm = TRUE), 2)
) %>%
left_join(plots, by = "plotID")
result <- obs %>%
group_by(plotID) %>%
summarize(
Count = n(),
Avg_N = round(mean(as.numeric(as.character(Bod_N)), na.rm = TRUE), 2),
Avg_F = round(mean(as.numeric(as.character(Bod_F)), na.rm = TRUE), 2),
Avg_R = round(mean(as.numeric(as.character(Bod_R)), na.rm = TRUE), 2)
) %>%
left_join(plots, by = "plotID")
result <- obs %>%
group_by(plotID) %>%
summarize(
Count = n(),
Avg_N = round(mean(as.numeric(as.character(Bod_N)), na.rm = TRUE), 2),
Avg_F = round(mean(as.numeric(as.character(Bod_F)), na.rm = TRUE), 2),
Avg_R = round(mean(as.numeric(as.character(Bod_R)), na.rm = TRUE), 2)
)
View(result)
# Read in plot description
plots <- read_csv("/Users/marco/GitHub/iwrw/R_files/iwrw-plots.csv")
result <- obs %>%
group_by(plotID) %>%
summarize(
Count = n(),
Avg_N = round(mean(as.numeric(as.character(Bod_N)), na.rm = TRUE), 2),
Avg_F = round(mean(as.numeric(as.character(Bod_F)), na.rm = TRUE), 2),
Avg_R = round(mean(as.numeric(as.character(Bod_R)), na.rm = TRUE), 2)
) %>%
left_join(plots, by = "plotID")
View(zeiger)
View(result)
View(plots)
obs <- map_dfr(csv_files, ~read_csv(.x)) %>%
filter(.[[1]] != 0) %>%
select(6, 13) %>%
rename(plot_id = "0...13") %>%
mutate(taxonCH = str_extract(taxonCH, "^\\w+ \\w+")) %>%
left_join(fi, by = c("taxonCH" = "Taxon"))
result <- obs %>%
group_by(plot_id) %>%
summarize(
Count = n(),
Avg_N = round(mean(as.numeric(as.character(Bod_N)), na.rm = TRUE), 2),
Avg_F = round(mean(as.numeric(as.character(Bod_F)), na.rm = TRUE), 2),
Avg_R = round(mean(as.numeric(as.character(Bod_R)), na.rm = TRUE), 2)
) %>%
left_join(plots, by = "plot_id")
View(result)
View(plots)
View(plots)
# Read in plot description
plots <- read_csv("/Users/marco/GitHub/iwrw/R_files/iwrw-plots.csv") %>%
mutate(plot_id = str_replace_all(plot_id, "-0", ""))
result <- obs %>%
group_by(plot_id) %>%
summarize(
Count = n(),
Avg_N = round(mean(as.numeric(as.character(Bod_N)), na.rm = TRUE), 2),
Avg_F = round(mean(as.numeric(as.character(Bod_F)), na.rm = TRUE), 2),
Avg_R = round(mean(as.numeric(as.character(Bod_R)), na.rm = TRUE), 2)
) %>%
left_join(plots, by = "plot_id")
View(result)
# Read in plot description
plots <- read_csv("/Users/marco/GitHub/iwrw/R_files/iwrw-plots.csv") %>%
mutate(plot_id = str_replace_all(plot_id, "-0", "")) %>%
mutate(plot_id = str_replace_all(plot_id, "-", ""))
result <- obs %>%
group_by(plot_id) %>%
summarize(
Count = n(),
Avg_N = round(mean(as.numeric(as.character(Bod_N)), na.rm = TRUE), 2),
Avg_F = round(mean(as.numeric(as.character(Bod_F)), na.rm = TRUE), 2),
Avg_R = round(mean(as.numeric(as.character(Bod_R)), na.rm = TRUE), 2)
) %>%
left_join(plots, by = "plot_id")
View(result)
F1A <- ggplot(result, aes(x = management, y = Count)) +
geom_boxplot() +
geom_point() +                            # Add scatter points
#geom_text(aes(label=plot_id), hjust=-0.2, vjust=0, size = 2) +
labs(x = "Management", y = "Number of species") +    # Set x and y axis labels
theme_classic() +
theme(text = element_text(size = 16))
F1A
F1B <- ggplot(result, aes(x = management, y = Avg_N)) +
geom_boxplot() +
geom_point() +                            # Add scatter points
labs(x = "Management", y = "Average N values") +    # Set x and y axis labels
theme_classic() +
theme(text = element_text(size = 16))
F1B
F1C <- ggplot(result, aes(x = Avg_N, y = Count)) +
geom_point() +                            # Add scatter points
geom_smooth(method = "lm", se = TRUE, col = "red") +   # Add correlation line
labs(x = "Average N value", y = "Number of species") +    # Set x and y axis labels
theme_classic() +
theme(text = element_text(size = 16))
F1C
(F1 <- cowplot::plot_grid(F1A,
F1B,
F1C,
ncol = 3, nrow = 1, byrow = FALSE,
labels = c("A", "B", "C"),
label_size = 20))
ggsave("/Users/marco/GitHub/iwrw/analysis/2024/biodiversity/figure_1.jpg",
width = 4000, height = 2000, units = "px")
View(result)
View(result)
last_year <- read_csv("/Users/marco/GitHub/iwrw/analysis/2023/export/table_for_Luis.csv")
last_year <- read_csv("/Users/marco/GitHub/iwrw/analysis/2023/export/table_for_Luis.csv") %>%
mutate(plot_id = str_replace_all(plot_id, "-0", "")) %>%
mutate(plot_id = str_replace_all(plot_id, "-", ""))
View(last_year)
View(last_year)
last_year <- read_csv("/Users/marco/GitHub/iwrw/analysis/2023/export/table_for_Luis.csv") %>%
mutate(plot_id = str_replace_all(plot_id, "-0", "")) %>%
mutate(plot_id = str_replace_all(plot_id, "-", "")) %>%
select(plot_id, Count) %>%
rename(Count_2023 = Count)
comparison <- results %>%
rename(Count_2024 = count) %>%
left_join(last_year, by = "plot_id")
comparison <- result %>%
rename(Count_2024 = count) %>%
left_join(last_year, by = "plot_id")
last_year <- read_csv("/Users/marco/GitHub/iwrw/analysis/2023/export/table_for_Luis.csv") %>%
mutate(plot_id = str_replace_all(plot_id, "-0", "")) %>%
mutate(plot_id = str_replace_all(plot_id, "-", "")) %>%
select(plot_id, Count) %>%
rename(Count_2023 = Count)
comparison <- result %>%
rename(Count_2024 = Count) %>%
left_join(last_year, by = "plot_id")
plot(comparison$Count_2024, comparison$Count_2023)
ggplot(comparison, aes(x = Count_2024, y = Count_2023)) +
geom_point(color = "blue", size = 3) +  # Scatter plot points
geom_abline(intercept = 0, slope = 1, color = "red", linetype = "dashed", size = 1) +  # 1:1 reference line
labs(title = "Comparison of Counts in 2024 and 2023",
x = "Count 2024",
y = "Count 2023") +  # Plot title and axis labels
theme_minimal()  # Minimal theme for a clean look
ggplot(comparison, aes(x = Count_2024, y = Count_2023)) +
geom_point(color = "black", size = 3) +  # Scatter plot points
geom_abline(intercept = 0, slope = 1, color = "red", linetype = "dashed", size = 1) +  # 1:1 reference line
labs(title = "Comparison of Counts in 2024 and 2023",
x = "Count 2024",
y = "Count 2023") +  # Plot title and axis labels
theme_classic()  # Minimal theme for a clean look
ggplot(comparison, aes(x = Count_2024, y = Count_2023)) +
geom_point(color = "black", size = 3) +  # Scatter plot points
geom_abline(intercept = 0, slope = 1, color = "red", linetype = "dashed", size = 1) +  # 1:1 reference line
labs(title = "Comparison of Counts in 2024 and 2023",
x = "Count 2024",
y = "Count 2023") +  # Plot title and axis labels
theme_classic() + # Minimal theme for a clean look
coord_fixed(ratio = 1)  # Set the aspect ratio to 1 to make the plot square
ggplot(comparison, aes(x = Count_2024, y = Count_2023)) +
geom_point(color = "black", size = 3) +  # Scatter plot points
geom_abline(intercept = 0, slope = 1, color = "red", linetype = "dashed", size = 1) +  # 1:1 reference line
labs(title = "Comparison of Counts in 2024 and 2023",
x = "Number of species\nonly with apps",
y = "Number of species\nwith Marco") +  # Plot title and axis labels
theme_classic()
ggplot(comparison, aes(x = Count_2024, y = Count_2023)) +
geom_point(color = "black", size = 3) +  # Scatter plot points
geom_abline(intercept = 0, slope = 1, color = "red", linetype = "dashed", size = 1) +
xlim(20, 50) +
ylim(20, 50) +
labs(title = "Comparison of Counts in 2024 and 2023",
x = "Number of species\nonly with apps",
y = "Number of species\nwith Marco") +  # Plot title and axis labels
theme_classic()
ggplot(comparison, aes(x = Count_2024, y = Count_2023)) +
geom_point(color = "black", size = 3) +  # Scatter plot points
geom_abline(intercept = 0, slope = 1, color = "red", linetype = "dashed", size = 1) +
xlim(20, 50) +
ylim(20, 50) +
labs(x = "Number of species\nonly with apps",
y = "Number of species\nwith Marco") +  # Plot title and axis labels
theme_classic()
View(comparison)
ggsave("/Users/marco/GitHub/iwrw/analysis/2024/biodiversity/figure_comparison.jpg",
width = 2000, height = 2000, units = "px")
