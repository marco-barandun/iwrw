group = "BFF") %>%
addCircleMarkers(data = non_BFF,
lat = ~Latitude, lng = ~Longitude,
popup = ~paste(ID, round(elevation, 0), sep = " - "),
radius = 8, stroke = FALSE, fillOpacity = 1, color = ~pal(priority),
group = "non_BFF") %>%
addLegend(pal = pal, values = plots$priority,
position = "bottomright", title = "Value") %>%
addScaleBar(position = "bottomleft") %>%
setView(lng = 9, lat = 46.4, zoom = 8) %>%
addPolygons(data = poly,
fill = FALSE,
color = "darkorange",
opacity = 0.9,
group = "Bewirtschaftungseinheiten") %>%
addAwesomeMarkers(data = donePlots,
lat = ~Latitude, lng = ~Longitude,
icon = ~awesomeIcons(
icon = "leaf",
markerColor = "green",
iconColor = "white",
library = "fa"
),
labelOptions = labelOptions(noHide = TRUE, textOnly = TRUE),
label = lapply(donePlots$ID, HTML),
clusterOptions = markerClusterOptions(removeOutsideVisibleBounds = FALSE),
group = "Done Plots") %>%
hideGroup(c("Bewirtschaftungseinheiten"))
)
htmlwidgets::saveWidget(m, file=paste("./2023-plot-map.html", sep = ""))
library(leaflet)
library(DT)
library(scales)
library(tidyverse)
library(sf)
library(htmltools)
setwd("/Users/marco/GitHub/graslandvielfalt/R_files")
source("./config_plot_map.R")
#municipalities <- st_read("./gadm41_CHE.gpkg", layer = "ADM_ADM_3")
#plots <- read_csv("./2023-joinedPlotSelection_v2.csv") %>%
#  get_municipality(., municipalities, what = c("NAME_1", "NAME_3")) %>%
#  rename(canton = NAME_1,
#         municipality = NAME_3) %>%
#  mutate(priority = gsub("A", "", priority)) %>%
#  arrange(priority, canton, municipality, elevation) %>%
#  group_by(municipality) %>%
#  mutate(ID = paste0(priority, "-",
#                     toupper(substr(canton, 1, 2)), "-",
#                     toupper(substr(municipality, 1, 2)), "-",
#                     row_number())) %>%
#  ungroup() %>%
#  select(ID, elevation, canton, municipality, mgroup, LU1980, LU2000, LU2020, LNF_Code, everything()) %>%
#  arrange(priority, elevation)
#write_csv(plots, "./2023-joinedPlotSelection_v3.csv")
donePlots <- read_csv("./2023-donePlots.csv") %>%
filter(Done == 1)
plots <- read_csv("./2023-joinedPlotSelection_v3.csv") %>%
filter(!priority %in% c("MP5", "MP6", "MP7")) #%>%
#filter(!ID %in% donePlots$ID)
View(plots)
plots <- read_csv("./2023-joinedPlotSelection_v3.csv") %>%
filter(!priority %in% c("MP5", "MP6", "MP7")) %>%
mutate(link = paste0("http://www.google.ch/maps/place/", Latitude, ",", Longitude))
View(plots)
(t <- DT::datatable(plots %>% filter(!ID %in% donePlots$ID) %>%
mutate(ID = paste0('<a target="_parent" href=', .$link, '>', .$ID, ' </a>', sep = "")),
class = "display nowrap",
escape = F,
rownames = FALSE))
(t <- DT::datatable(plots %>% filter(!ID %in% donePlots$ID) %>%
mutate(ID = paste0('<a target="_parent" href=', .$link, '>', .$ID, ' </a>', sep = "")),
class = "display nowrap",
escape = F,
rownames = FALSE))
htmltools::save_html(t, file="2023-plot-table.html")
install.packages("leaflet.fullscreen")
library(htmltools)
library(leaflet)
library(leaflet.fullscreen)
library(leaflet)
library(DT)
library(scales)
library(tidyverse)
library(sf)
library(htmltools)
setwd("/Users/marco/GitHub/graslandvielfalt/R_files")
source("./config_plot_map.R")
#municipalities <- st_read("./gadm41_CHE.gpkg", layer = "ADM_ADM_3")
#plots <- read_csv("./2023-joinedPlotSelection_v2.csv") %>%
#  get_municipality(., municipalities, what = c("NAME_1", "NAME_3")) %>%
#  rename(canton = NAME_1,
#         municipality = NAME_3) %>%
#  mutate(priority = gsub("A", "", priority)) %>%
#  arrange(priority, canton, municipality, elevation) %>%
#  group_by(municipality) %>%
#  mutate(ID = paste0(priority, "-",
#                     toupper(substr(canton, 1, 2)), "-",
#                     toupper(substr(municipality, 1, 2)), "-",
#                     row_number())) %>%
#  ungroup() %>%
#  select(ID, elevation, canton, municipality, mgroup, LU1980, LU2000, LU2020, LNF_Code, everything()) %>%
#  arrange(priority, elevation)
#write_csv(plots, "./2023-joinedPlotSelection_v3.csv")
donePlots <- read_csv("./2023-donePlots.csv") %>%
filter(Done == 1)
plots <- read_csv("./2023-joinedPlotSelection_v3.csv") %>%
filter(!priority %in% c("MP5", "MP6", "MP7")) %>%
mutate(link = paste0("http://www.google.ch/maps/place/", Latitude, ",", Longitude))
#be <- rgdal::readOGR("/Users/marco/kDocuments_Marco/PhD/server/1_original_data/shapefiles/be_bewirtschaftungseinheit_view.shp")
#poly <- be %>%
#  get_polygons(plots = plots, shapefile = ., radius_m = 500)
#
#writeOGR(poly, dsn = "./2023-plots-with-be-poly.geojson",
#         layer = ogrListLayers("/Users/marco/kDocuments_Marco/PhD/server/1_original_data/shapefiles/be_bewirtschaftungseinheit_view.shp")[1],
#         driver = "GeoJSON")
poly <- rgdal::readOGR("./2023-plots-with-be-poly.geojson")
########################################################################################################################################
### Create plot table #################################################################################################################
########################################################################################################################################
(t <- DT::datatable(plots %>% filter(!ID %in% donePlots$ID) %>%
mutate(ID = paste0('<a target="_parent" href=', .$link, '>', .$ID, ' </a>', sep = "")),
class = "display nowrap",
escape = F,
rownames = FALSE))
htmltools::save_html(t, file="2023-plot-table.html")
# Define a color palette with distinct colors
pal <- colorFactor(
palette = c("red", "orange", "yellow", "green", "blue", "purple", "magenta"),
domain = plots$priority
)
# Filter the points with LU2020 column set to true
BFF <- plots %>% filter(LU2020 == TRUE)
non_BFF <- plots %>% filter(LU2020 == FALSE | is.na(LU2020))
(m <- leaflet(plots) %>%
addTiles(urlTemplate = "https://wmts20.geo.admin.ch/1.0.0/ch.swisstopo.pixelkarte-farbe/default/current/3857/{z}/{x}/{y}.jpeg",
attribution = '&copy; <a href="https://www.geo.admin.ch/de/about-swiss-geoportal/impressum.html#copyright">swisstopo</a>',
group = "Swiss Topographic Map") %>%
addTiles(urlTemplate = "https://wmts20.geo.admin.ch/1.0.0/ch.swisstopo.swissimage/default/current/3857/{z}/{x}/{y}.jpeg",
attribution = '&copy; <a href="https://www.geo.admin.ch/de/about-swiss-geoportal/impressum.html#copyright">swisstopo</a>',
group = "Satellite View") %>%
addLayersControl(
baseGroups = c("Swiss Topographic Map", "Satellite View"),
overlayGroups = c("BFF", "non_BFF", "Done Plots", "Bewirtschaftungseinheiten"),
options = layersControlOptions(collapsed = TRUE)
) %>%
addCircleMarkers(data = BFF,
lat = ~Latitude, lng = ~Longitude,
popup = ~paste(ID, round(elevation, 0), sep = " - "),
radius = 8, stroke = FALSE, fillOpacity = 1, color = ~pal(priority),
group = "BFF") %>%
addCircleMarkers(data = non_BFF,
lat = ~Latitude, lng = ~Longitude,
popup = ~paste(ID, round(elevation, 0), sep = " - "),
radius = 8, stroke = FALSE, fillOpacity = 1, color = ~pal(priority),
group = "non_BFF") %>%
addLegend(pal = pal, values = plots$priority,
position = "bottomright", title = "Value") %>%
addScaleBar(position = "bottomleft") %>%
setView(lng = 9, lat = 46.4, zoom = 8) %>%
addPolygons(data = poly,
fill = FALSE,
color = "darkorange",
opacity = 0.9,
group = "Bewirtschaftungseinheiten") %>%
addAwesomeMarkers(data = donePlots,
lat = ~Latitude, lng = ~Longitude,
icon = ~awesomeIcons(
icon = "leaf",
markerColor = "green",
iconColor = "white",
library = "fa"
),
labelOptions = labelOptions(noHide = TRUE, textOnly = TRUE),
label = lapply(donePlots$ID, HTML),
clusterOptions = markerClusterOptions(removeOutsideVisibleBounds = FALSE),
group = "Done Plots") %>%
hideGroup(c("Bewirtschaftungseinheiten")) %>%
addWMSTiles(
baseUrl = "https://wms.geo.admin.ch/",
layers = "ch.bav.haltestellen-oev",
group = "Public Transport Stops",
options = WMSTileOptions(format = "image/png", transparent = TRUE)
)
)
(m <- leaflet(plots) %>%
addTiles(urlTemplate = "https://wmts20.geo.admin.ch/1.0.0/ch.swisstopo.pixelkarte-farbe/default/current/3857/{z}/{x}/{y}.jpeg",
attribution = '&copy; <a href="https://www.geo.admin.ch/de/about-swiss-geoportal/impressum.html#copyright">swisstopo</a>',
group = "Swiss Topographic Map") %>%
addTiles(urlTemplate = "https://wmts20.geo.admin.ch/1.0.0/ch.swisstopo.swissimage/default/current/3857/{z}/{x}/{y}.jpeg",
attribution = '&copy; <a href="https://www.geo.admin.ch/de/about-swiss-geoportal/impressum.html#copyright">swisstopo</a>',
group = "Satellite View") %>%
addLayersControl(
baseGroups = c("Swiss Topographic Map", "Satellite View"),
overlayGroups = c("BFF", "non_BFF", "Done Plots", "Bewirtschaftungseinheiten"),
options = layersControlOptions(collapsed = TRUE)
) %>%
addCircleMarkers(data = BFF,
lat = ~Latitude, lng = ~Longitude,
popup = ~paste(ID, round(elevation, 0), sep = " - "),
radius = 8, stroke = FALSE, fillOpacity = 1, color = ~pal(priority),
group = "BFF") %>%
addCircleMarkers(data = non_BFF,
lat = ~Latitude, lng = ~Longitude,
popup = ~paste(ID, round(elevation, 0), sep = " - "),
radius = 8, stroke = FALSE, fillOpacity = 1, color = ~pal(priority),
group = "non_BFF") %>%
addLegend(pal = pal, values = plots$priority,
position = "bottomright", title = "Value") %>%
addScaleBar(position = "bottomleft") %>%
setView(lng = 9, lat = 46.4, zoom = 8) %>%
addPolygons(data = poly,
fill = FALSE,
color = "darkorange",
opacity = 0.9,
group = "Bewirtschaftungseinheiten") %>%
addAwesomeMarkers(data = donePlots,
lat = ~Latitude, lng = ~Longitude,
icon = ~awesomeIcons(
icon = "leaf",
markerColor = "green",
iconColor = "white",
library = "fa"
),
labelOptions = labelOptions(noHide = TRUE, textOnly = TRUE),
label = lapply(donePlots$ID, HTML),
clusterOptions = markerClusterOptions(removeOutsideVisibleBounds = FALSE),
group = "Done Plots") %>%
addWMSTiles(
baseUrl = "https://wms.geo.admin.ch/",
layers = "ch.bav.haltestellen-oev",
group = "Public Transport Stops",
options = WMSTileOptions(format = "image/png", transparent = TRUE)
) %>%
hideGroup(c("Bewirtschaftungseinheiten", "Public Transport Stops"))
)
(m <- leaflet(plots) %>%
addTiles(urlTemplate = "https://wmts20.geo.admin.ch/1.0.0/ch.swisstopo.pixelkarte-farbe/default/current/3857/{z}/{x}/{y}.jpeg",
attribution = '&copy; <a href="https://www.geo.admin.ch/de/about-swiss-geoportal/impressum.html#copyright">swisstopo</a>',
group = "Swiss Topographic Map") %>%
addTiles(urlTemplate = "https://wmts20.geo.admin.ch/1.0.0/ch.swisstopo.swissimage/default/current/3857/{z}/{x}/{y}.jpeg",
attribution = '&copy; <a href="https://www.geo.admin.ch/de/about-swiss-geoportal/impressum.html#copyright">swisstopo</a>',
group = "Satellite View") %>%
addLayersControl(
baseGroups = c("Swiss Topographic Map", "Satellite View"),
overlayGroups = c("BFF", "non_BFF", "Done Plots", "Bewirtschaftungseinheiten"),
options = layersControlOptions(collapsed = TRUE)
) %>%
addCircleMarkers(data = BFF,
lat = ~Latitude, lng = ~Longitude,
popup = ~paste(ID, round(elevation, 0), sep = " - "),
radius = 8, stroke = FALSE, fillOpacity = 1, color = ~pal(priority),
group = "BFF") %>%
addCircleMarkers(data = non_BFF,
lat = ~Latitude, lng = ~Longitude,
popup = ~paste(ID, round(elevation, 0), sep = " - "),
radius = 8, stroke = FALSE, fillOpacity = 1, color = ~pal(priority),
group = "non_BFF") %>%
addLegend(pal = pal, values = plots$priority,
position = "bottomright", title = "Value") %>%
addScaleBar(position = "bottomleft") %>%
setView(lng = 9, lat = 46.4, zoom = 8) %>%
addPolygons(data = poly,
fill = FALSE,
color = "darkorange",
opacity = 0.9,
group = "Bewirtschaftungseinheiten") %>%
addAwesomeMarkers(data = donePlots,
lat = ~Latitude, lng = ~Longitude,
icon = ~awesomeIcons(
icon = "leaf",
markerColor = "green",
iconColor = "white",
library = "fa"
),
labelOptions = labelOptions(noHide = TRUE, textOnly = TRUE),
label = lapply(donePlots$ID, HTML),
clusterOptions = markerClusterOptions(removeOutsideVisibleBounds = FALSE),
group = "Done Plots") %>%
addWMSTiles(
baseUrl = "https://wms.geo.admin.ch/",
layers = "ch.bav.haltestellen-oev",
group = "Public Transport Stops",
options = WMSTileOptions(format = "image/png", transparent = TRUE)
) %>%
hideGroup(c("Bewirtschaftungseinheiten", "Public Transport Stops"))
)
(m <- leaflet(plots) %>%
addTiles(urlTemplate = "https://wmts20.geo.admin.ch/1.0.0/ch.swisstopo.pixelkarte-farbe/default/current/3857/{z}/{x}/{y}.jpeg",
attribution = '&copy; <a href="https://www.geo.admin.ch/de/about-swiss-geoportal/impressum.html#copyright">swisstopo</a>',
group = "Swiss Topographic Map") %>%
addTiles(urlTemplate = "https://wmts20.geo.admin.ch/1.0.0/ch.swisstopo.swissimage/default/current/3857/{z}/{x}/{y}.jpeg",
attribution = '&copy; <a href="https://www.geo.admin.ch/de/about-swiss-geoportal/impressum.html#copyright">swisstopo</a>',
group = "Satellite View") %>%
addLayersControl(
baseGroups = c("Swiss Topographic Map", "Satellite View"),
overlayGroups = c("BFF", "non_BFF", "Done Plots", "Bewirtschaftungseinheiten"),
options = layersControlOptions(collapsed = TRUE)
) %>%
addCircleMarkers(data = BFF,
lat = ~Latitude, lng = ~Longitude,
popup = ~paste(ID, round(elevation, 0), sep = " - "),
radius = 8, stroke = FALSE, fillOpacity = 1, color = ~pal(priority),
group = "BFF") %>%
addCircleMarkers(data = non_BFF,
lat = ~Latitude, lng = ~Longitude,
popup = ~paste(ID, round(elevation, 0), sep = " - "),
radius = 8, stroke = FALSE, fillOpacity = 1, color = ~pal(priority),
group = "non_BFF") %>%
addLegend(pal = pal, values = plots$priority,
position = "bottomright", title = "Value") %>%
addScaleBar(position = "bottomleft") %>%
setView(lng = 9, lat = 46.4, zoom = 8) %>%
addPolygons(data = poly,
fill = FALSE,
color = "darkorange",
opacity = 0.9,
group = "Bewirtschaftungseinheiten") %>%
addAwesomeMarkers(data = donePlots,
lat = ~Latitude, lng = ~Longitude,
icon = ~awesomeIcons(
icon = "leaf",
markerColor = "green",
iconColor = "white",
library = "fa"
),
labelOptions = labelOptions(noHide = TRUE, textOnly = TRUE),
label = lapply(donePlots$ID, HTML),
clusterOptions = markerClusterOptions(removeOutsideVisibleBounds = FALSE),
group = "Done Plots") %>%
addWMSTiles(
baseUrl = "https://wms.geo.admin.ch/",
layers = "ch.bav.haltestellen-oev",
group = "Public Transport Stops",
options = WMSTileOptions(format = "image/png", transparent = TRUE)
) %>%
hideGroup(c("Bewirtschaftungseinheiten"))
)
(m <- leaflet(plots) %>%
addTiles(urlTemplate = "https://wmts20.geo.admin.ch/1.0.0/ch.swisstopo.pixelkarte-farbe/default/current/3857/{z}/{x}/{y}.jpeg",
attribution = '&copy; <a href="https://www.geo.admin.ch/de/about-swiss-geoportal/impressum.html#copyright">swisstopo</a>',
group = "Swiss Topographic Map") %>%
addTiles(urlTemplate = "https://wmts20.geo.admin.ch/1.0.0/ch.swisstopo.swissimage/default/current/3857/{z}/{x}/{y}.jpeg",
attribution = '&copy; <a href="https://www.geo.admin.ch/de/about-swiss-geoportal/impressum.html#copyright">swisstopo</a>',
group = "Satellite View") %>%
addCircleMarkers(data = BFF,
lat = ~Latitude, lng = ~Longitude,
popup = ~paste(ID, round(elevation, 0), sep = " - "),
radius = 8, stroke = FALSE, fillOpacity = 1, color = ~pal(priority),
group = "BFF") %>%
addCircleMarkers(data = non_BFF,
lat = ~Latitude, lng = ~Longitude,
popup = ~paste(ID, round(elevation, 0), sep = " - "),
radius = 8, stroke = FALSE, fillOpacity = 1, color = ~pal(priority),
group = "non_BFF") %>%
addLegend(pal = pal, values = plots$priority,
position = "bottomright", title = "Value") %>%
addScaleBar(position = "bottomleft") %>%
setView(lng = 9, lat = 46.4, zoom = 8) %>%
addPolygons(data = poly,
fill = FALSE,
color = "darkorange",
opacity = 0.9,
group = "Bewirtschaftungseinheiten") %>%
addAwesomeMarkers(data = donePlots,
lat = ~Latitude, lng = ~Longitude,
icon = ~awesomeIcons(
icon = "leaf",
markerColor = "green",
iconColor = "white",
library = "fa"
),
labelOptions = labelOptions(noHide = TRUE, textOnly = TRUE),
label = lapply(donePlots$ID, HTML),
clusterOptions = markerClusterOptions(removeOutsideVisibleBounds = FALSE),
group = "Done Plots") %>%
addWMSTiles(
baseUrl = "https://wms.geo.admin.ch/",
layers = "ch.bav.haltestellen-oev",
group = "Public Transport Stops",
options = WMSTileOptions(format = "image/png", transparent = TRUE)
) %>%
addLayersControl(
baseGroups = c("Swiss Topographic Map", "Satellite View"),
overlayGroups = c("BFF", "non_BFF", "Done Plots", "Bewirtschaftungseinheiten"),
options = layersControlOptions(collapsed = TRUE)
) %>%
hideGroup(c("Bewirtschaftungseinheiten", "Public Transport Stops"))
)
(m <- leaflet(plots) %>%
addTiles(urlTemplate = "https://wmts20.geo.admin.ch/1.0.0/ch.swisstopo.pixelkarte-farbe/default/current/3857/{z}/{x}/{y}.jpeg",
attribution = '&copy; <a href="https://www.geo.admin.ch/de/about-swiss-geoportal/impressum.html#copyright">swisstopo</a>',
group = "Swiss Topographic Map") %>%
addTiles(urlTemplate = "https://wmts20.geo.admin.ch/1.0.0/ch.swisstopo.swissimage/default/current/3857/{z}/{x}/{y}.jpeg",
attribution = '&copy; <a href="https://www.geo.admin.ch/de/about-swiss-geoportal/impressum.html#copyright">swisstopo</a>',
group = "Satellite View") %>%
addCircleMarkers(data = BFF,
lat = ~Latitude, lng = ~Longitude,
popup = ~paste(ID, round(elevation, 0), sep = " - "),
radius = 8, stroke = FALSE, fillOpacity = 1, color = ~pal(priority),
group = "BFF") %>%
addCircleMarkers(data = non_BFF,
lat = ~Latitude, lng = ~Longitude,
popup = ~paste(ID, round(elevation, 0), sep = " - "),
radius = 8, stroke = FALSE, fillOpacity = 1, color = ~pal(priority),
group = "non_BFF") %>%
addLegend(pal = pal, values = plots$priority,
position = "bottomright", title = "Value") %>%
addScaleBar(position = "bottomleft") %>%
setView(lng = 9, lat = 46.4, zoom = 8) %>%
addPolygons(data = poly,
fill = FALSE,
color = "darkorange",
opacity = 0.9,
group = "Bewirtschaftungseinheiten") %>%
addAwesomeMarkers(data = donePlots,
lat = ~Latitude, lng = ~Longitude,
icon = ~awesomeIcons(
icon = "leaf",
markerColor = "green",
iconColor = "white",
library = "fa"
),
labelOptions = labelOptions(noHide = TRUE, textOnly = TRUE),
label = lapply(donePlots$ID, HTML),
clusterOptions = markerClusterOptions(removeOutsideVisibleBounds = FALSE),
group = "Done Plots") %>%
addWMSTiles(
baseUrl = "https://wms.geo.admin.ch/",
layers = "ch.bav.haltestellen-oev",
group = "Public Transport Stops",
options = WMSTileOptions(format = "image/png", transparent = TRUE)
) %>%
addLayersControl(
baseGroups = c("Swiss Topographic Map", "Satellite View"),
overlayGroups = c("BFF", "non_BFF", "Done Plots", "Bewirtschaftungseinheiten", "Public Transport Stops"),
options = layersControlOptions(collapsed = TRUE)
) %>%
hideGroup(c("Bewirtschaftungseinheiten", "Public Transport Stops"))
)
install.packages("mapview")
library(mapview)
# Add fullscreen button
m <- mapview(m, fullscreen = TRUE)
install.packages("leaflet.extras")
library(leaflet.extras)
# Add fullscreen button
m <- addFullscreenControl(m)
m
(m <- leaflet(plots) %>%
addTiles(urlTemplate = "https://wmts20.geo.admin.ch/1.0.0/ch.swisstopo.pixelkarte-farbe/default/current/3857/{z}/{x}/{y}.jpeg",
attribution = '&copy; <a href="https://www.geo.admin.ch/de/about-swiss-geoportal/impressum.html#copyright">swisstopo</a>',
group = "Swiss Topographic Map") %>%
addTiles(urlTemplate = "https://wmts20.geo.admin.ch/1.0.0/ch.swisstopo.swissimage/default/current/3857/{z}/{x}/{y}.jpeg",
attribution = '&copy; <a href="https://www.geo.admin.ch/de/about-swiss-geoportal/impressum.html#copyright">swisstopo</a>',
group = "Satellite View") %>%
addCircleMarkers(data = BFF,
lat = ~Latitude, lng = ~Longitude,
popup = ~paste(ID, round(elevation, 0), sep = " - "),
radius = 8, stroke = FALSE, fillOpacity = 1, color = ~pal(priority),
group = "BFF") %>%
addCircleMarkers(data = non_BFF,
lat = ~Latitude, lng = ~Longitude,
popup = ~paste(ID, round(elevation, 0), sep = " - "),
radius = 8, stroke = FALSE, fillOpacity = 1, color = ~pal(priority),
group = "non_BFF") %>%
addLegend(pal = pal, values = plots$priority,
position = "bottomright", title = "Value") %>%
addScaleBar(position = "bottomleft") %>%
setView(lng = 9, lat = 46.4, zoom = 8) %>%
addPolygons(data = poly,
fill = FALSE,
color = "darkorange",
opacity = 0.9,
group = "Bewirtschaftungseinheiten") %>%
addAwesomeMarkers(data = donePlots,
lat = ~Latitude, lng = ~Longitude,
icon = ~awesomeIcons(
icon = "leaf",
markerColor = "green",
iconColor = "white",
library = "fa"
),
labelOptions = labelOptions(noHide = TRUE, textOnly = TRUE),
label = lapply(donePlots$ID, HTML),
clusterOptions = markerClusterOptions(removeOutsideVisibleBounds = FALSE),
group = "Done Plots") %>%
addWMSTiles(
baseUrl = "https://wms.geo.admin.ch/",
layers = "ch.bav.haltestellen-oev",
group = "Public Transport Stops",
options = WMSTileOptions(format = "image/png", transparent = TRUE)
) %>%
addLayersControl(
baseGroups = c("Swiss Topographic Map", "Satellite View"),
overlayGroups = c("BFF", "non_BFF", "Done Plots", "Bewirtschaftungseinheiten", "Public Transport Stops"),
options = layersControlOptions(collapsed = TRUE)
) %>%
hideGroup(c("Bewirtschaftungseinheiten", "Public Transport Stops"))
)
m
# Add fullscreen button
m <- addFullscreenControl(m)
# Add fullscreen button
m <- addFullscreenControl(m)
htmlwidgets::saveWidget(m, file=paste("./2023-plot-map.html", sep = ""))
(t <- DT::datatable(plots %>% filter(!ID %in% donePlots$ID) %>%
mutate(ID = paste0('<a target="_parent" href=', .$link, '>', .$ID, ' </a>', sep = "")) %>%
select(-Latitude, -Longitude, -link, -P.Test.CO2., -Nutzungsid),
class = "display nowrap",
escape = F,
rownames = FALSE))
htmltools::save_html(t, file="2023-plot-table.html")
